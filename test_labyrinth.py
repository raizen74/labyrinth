import time

from labyrinth import solution

start_time = time.time()
print(f"Start time: {start_time:.6f}")

test1 = [
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["#", ".", ".", ".", "#", ".", ".", ".", "."],
    [".", ".", ".", ".", "#", ".", ".", ".", "."],
    [".", "#", ".", ".", ".", ".", ".", "#", "."],
    [".", "#", ".", ".", ".", ".", ".", "#", "."],
]

print(f"Shortest path distance: {solution(test1)}")  # 11

test2 = [
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["#", ".", ".", ".", "#", ".", ".", "#", "."],
    [".", ".", ".", ".", "#", ".", ".", ".", "."],
    [".", "#", ".", ".", ".", ".", ".", "#", "."],
    [".", "#", ".", ".", ".", ".", ".", "#", "."],
]

print(f"Shortest path distance: {solution(test2)}")  # -1

test3 = [[".", ".", "."], [".", ".", "."], [".", ".", "."]]

print(f"Shortest path distance: {solution(test3)}")  # 2

test4 = [
    [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", "#", ".", ".", ".", ".", "#", ".", ".", "."],
    [".", "#", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", "#", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", "#", ".", ".", ".", "#", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", "#", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
]

print(f"Shortest path distance: {solution(test4)}")  # 16

end_time = time.time()

execution_time = end_time - start_time
print(f"End time: {end_time:.6f}")
print(f"Function execution time: {execution_time:.6f} seconds")
